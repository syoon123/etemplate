{"version":3,"sources":["components/RecipientsPreview.tsx","components/CustomButton.tsx","components/Content.tsx","components/FilterBusterToggle.tsx","components/Recipients.tsx","App.tsx","components/TemplateEdit.tsx","components/TemplatePreview.tsx","components/GeneratedUrl.tsx","serviceWorker.ts","index.tsx"],"names":["RecipientsPreview","props","recipientsString","recipients","length","noRecipients","i","substring","label","CustomButton","isHidden","Button","variant","className","onClick","action","size","block","Content","formControl","formText","formFeedback","handleChange","evt","target","value","isLongText","Form","Control","as","rows","placeholder","onChange","errorMessage","helperText","Text","Feedback","type","Group","Label","FilterBusterToggle","Row","Col","controlId","Check","checked","Recipients","React","useState","setValue","error","setError","validEmail","RegExp","items","map","item","Badge","pill","key","filter","handleDelete","onKeyDown","includes","preventDefault","trim","isValid","onBlur","onPaste","emails","clipboardData","getData","match","toBeAdded","email","isInList","test","isEmail","concat","existingItems","App","setRecipients","cc","setCc","bcc","setBcc","subject","setSubject","body","setBody","fullUrl","setFullUrl","isEditing","setIsEditing","filterBuster","setFilterBuster","alias","setAlias","aliasValid","setAliasValid","tinyUrl","setTinyUrl","Container","lg","href","rel","Card","Body","handleRecipients","handleCc","handleBcc","handleSubject","handleBody","handleGenerateUrl","recipientsList","encodeURIComponent","join","ccList","bccList","subjectString","bodyString","md","handleAlias","toggleFilterBuster","handleBackToEdit","handleGenerateTinyUrl","TemplatePreview","getRequest","fetch","headers","Origin","then","response","text","window","scrollTo","document","scrollHeight","handleCopyToClipboard","handleRefresh","GeneratedUrl","location","reload","navigator","clipboard","writeText","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c9f9866e.chunk.js","sourcesContent":["import React from 'react';\n\ntype RecipientsPreviewProps = {\n  label: string;\n  recipients: string[];\n  noRecipients: string;\n};\n\nexport default function RecipientsPreview(props: RecipientsPreviewProps) {\n  let recipientsString: string = '';\n  if (props.recipients.length === 0) {\n    recipientsString = props.noRecipients;\n  } else {\n    for (let i in props.recipients) {\n      recipientsString = recipientsString + props.recipients[i] + ', ';\n    }\n    recipientsString = recipientsString.substring(\n      0,\n      recipientsString.length - 2\n    );\n  }\n  return <p>{props.label + ': ' + recipientsString}</p>;\n}\n","import React from 'react';\nimport { CustomButtonCallback } from '../App';\nimport Button from 'react-bootstrap/Button';\n\ntype CustomButtonProps = {\n  label: string;\n  action: CustomButtonCallback;\n  variant: 'primary' | 'secondary' | 'danger' | 'link';\n  className?: string;\n  size?: 'sm' | 'lg';\n  isHidden?: boolean;\n};\n\nexport default function CustomButton(props: CustomButtonProps) {\n  if (props.isHidden) {\n    return;\n  }\n  return (\n    <Button\n      variant={props.variant}\n      className={props.className}\n      onClick={props.action}\n      size={props.size}\n      block\n    >\n      {props.label}\n    </Button>\n  );\n}\n","import React from 'react';\nimport { ContentCallback } from '../App';\nimport Form from 'react-bootstrap/Form';\n\ntype ContentProps = {\n  label: string;\n  placeholder: string;\n  action: ContentCallback;\n  isLongText: boolean;\n  value: string;\n  isHidden?: boolean;\n  helperText?: string;\n  errorMessage?: string;\n};\n\nexport default function Content(props: ContentProps) {\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    props.action(evt.target.value);\n  };\n  if (props.isHidden) {\n    return;\n  }\n  let formControl: any;\n  if (props.isLongText) {\n    formControl = (\n      <Form.Control\n        as=\"textarea\"\n        rows={10}\n        placeholder={props.placeholder}\n        onChange={handleChange}\n        value={props.value}\n      />\n    );\n  } else {\n    formControl = (\n      <Form.Control\n        className={'input ' + (props.errorMessage && ' is-invalid')}\n        placeholder={props.placeholder}\n        value={props.value}\n        onChange={handleChange}\n      />\n    );\n  }\n  let formText: any;\n  if (props.helperText) {\n    formText = <Form.Text className=\"text-muted\">{props.helperText}</Form.Text>;\n  } else {\n    formText = null;\n  }\n  let formFeedback: any;\n  if (props.errorMessage) {\n    formFeedback = (\n      <Form.Control.Feedback type=\"invalid\">\n        {props.errorMessage}\n      </Form.Control.Feedback>\n    );\n  } else {\n    formFeedback = null;\n  }\n  return (\n    <Form.Group>\n      <Form.Label className=\"input-label\">{props.label}</Form.Label>&nbsp;\n      {formControl}\n      {formText}\n      {formFeedback}\n    </Form.Group>\n  );\n}\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport { CustomButtonCallback } from '../App';\n\nexport type FilterBusterToggleProps = {\n  checked: boolean;\n  onChange: CustomButtonCallback;\n};\n\nfunction FilterBusterToggle(props: FilterBusterToggleProps) {\n  return (\n    <Row className=\"mb-3\">\n      <Col>\n        <Form>\n          <Form.Group controlId=\"formBasicCheckbox\">\n            <Form.Check\n              type=\"checkbox\"\n              label={`Filter Buster ${props.checked ? 'ON' : 'OFF'}`}\n              onChange={props.onChange}\n              checked={props.checked}\n            />\n            <Form.Text className=\"text-muted\">\n              When Filter Buster is on, the generated link will direct users to\n              Filter Buster, which will insert a randomized character into each\n              word of the subject and body to bypass email filters!\n            </Form.Text>\n          </Form.Group>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n\nexport default FilterBusterToggle;\n","import React from 'react';\nimport { RecipientsCallback } from '../App';\nimport Form from 'react-bootstrap/Form';\nimport Badge from 'react-bootstrap/Badge';\n\ntype RecipientsProps = {\n  label: string;\n  action: RecipientsCallback;\n  items: string[];\n  existingItems: string[];\n  isHidden: boolean;\n};\n\nexport default function Recipients(props: RecipientsProps) {\n  const [value, setValue] = React.useState<string>('');\n  const [error, setError] = React.useState<string>('');\n  const validEmail = new RegExp(/[\\w\\d.-]+@[\\w\\d.-]+\\.[\\w\\d.-]+/g);\n  if (props.isHidden) {\n    return;\n  }\n\n  const handleBlur = (evt: React.FocusEvent) => {\n    setValue(value.trim());\n\n    if (value && isValid(value)) {\n      setValue('');\n      props.action([...props.items, value]);\n    }\n  };\n\n  const handleKeyDown = (evt: React.KeyboardEvent<HTMLInputElement>) => {\n    if (['Enter', ',', ' '].includes(evt.key)) {\n      evt.preventDefault();\n\n      setValue(value.trim());\n\n      if (value && isValid(value)) {\n        setValue('');\n        props.action([...props.items, value]);\n      }\n    }\n  };\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(evt.target.value);\n    setError('');\n  };\n\n  const handleDelete = (item: string) => {\n    props.action(props.items.filter((i) => i !== item));\n  };\n\n  const handlePaste = (evt: React.ClipboardEvent<HTMLInputElement>) => {\n    evt.preventDefault();\n\n    var paste = evt.clipboardData.getData('text');\n    var emails = paste.match(validEmail);\n\n    if (emails) {\n      var toBeAdded = emails.filter((email) => !isInList(email));\n\n      props.action([...props.items, ...toBeAdded]);\n    }\n  };\n\n  function isValid(email: string) {\n    let error = null;\n\n    if (isInList(email)) {\n      error = `${email} has already been added.`;\n    }\n\n    if (!isEmail(email)) {\n      error = `${email} is not a valid email address.`;\n    }\n\n    if (error) {\n      setError(error);\n      return false;\n    }\n\n    return true;\n  }\n\n  function isInList(email: string) {\n    let emailList: string[] = props.items.concat(props.existingItems);\n    return emailList.includes(email);\n  }\n\n  function isEmail(email: string) {\n    return validEmail.test(email);\n  }\n\n  return (\n    <Form.Group>\n      <div className=\"input-label\">\n        <Form.Label>{props.label}</Form.Label>&nbsp;\n        {props.items.map((item) => (\n          <Badge pill variant=\"primary\" className=\"tag-item\" key={item}>\n            {item}\n            <button\n              type=\"button\"\n              className=\"button\"\n              onClick={() => handleDelete(item)}\n            >\n              &times;\n            </button>\n          </Badge>\n        ))}\n      </div>\n\n      <Form.Control\n        className={'input ' + (error && ' is-invalid')}\n        value={value}\n        placeholder=\"Type or paste email addresses\"\n        onKeyDown={handleKeyDown}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onPaste={handlePaste}\n      />\n      <Form.Text className=\"text-muted\">\n        Press ENTER, SPACE, or COMMA to add to recipients list.\n      </Form.Text>\n\n      {error && (\n        <Form.Control.Feedback type=\"invalid\">{error}</Form.Control.Feedback>\n      )}\n    </Form.Group>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport TemplatePreview from './components/TemplatePreview';\nimport TemplateEdit from './components/TemplateEdit';\nimport GeneratedUrl from './components/GeneratedUrl';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\n\nexport type RecipientsCallback = {\n  (items: string[]): void;\n};\n\nexport type ContentCallback = {\n  (text: string): void;\n};\n\nexport type CustomButtonCallback = {\n  (): void;\n};\n\nexport default function App() {\n  const [recipients, setRecipients] = React.useState<string[]>([]);\n  const [cc, setCc] = React.useState<string[]>([]);\n  const [bcc, setBcc] = React.useState<string[]>([]);\n  const [subject, setSubject] = React.useState<string>('');\n  const [body, setBody] = React.useState<string>('');\n  const [fullUrl, setFullUrl] = React.useState<string>('');\n  const [isEditing, setIsEditing] = React.useState<boolean>(true);\n  const [filterBuster, setFilterBuster] = React.useState<boolean>(true);\n  const [alias, setAlias] = React.useState<string>('');\n  const [aliasValid, setAliasValid] = React.useState<boolean>(true);\n  const [tinyUrl, setTinyUrl] = React.useState<string>('');\n\n  function handleToggleFilterBuster() {\n    setFilterBuster(!filterBuster);\n  }\n\n  function handleBackToEdit() {\n    setTinyUrl('');\n    setIsEditing(true);\n  }\n\n  function handleAlias(text: string) {\n    setAlias(text.trim());\n  }\n\n  function handleGenerateUrl() {\n    let recipientsList: string = encodeURIComponent(recipients.join());\n    let ccList: string = cc.join();\n    if (ccList !== '') {\n      ccList = `cc=`.concat(encodeURIComponent(ccList));\n    }\n    let bccList: string = bcc.join();\n    if (bccList !== '') {\n      bccList = `&bcc=`.concat(encodeURIComponent(bccList));\n    }\n    let subjectString: string = '';\n    if (subject !== '') {\n      subjectString = `&subject=${encodeURIComponent(subject)}`;\n    }\n    let bodyString: string = `&body=${encodeURIComponent(body)}`;\n    if (filterBuster) {\n      setFullUrl(\n        `https://st234pa.github.io/filter-Buster/?to=${recipientsList}&${ccList}${bccList}${subjectString}${bodyString}`\n      );\n    } else {\n      setFullUrl(\n        `mailto:${recipientsList}?${ccList}${bccList}${subjectString}${bodyString}`\n      );\n    }\n    setIsEditing(false);\n  }\n\n  function handleGenerateTinyUrl() {\n    let getRequest: string = `https://tinyurl.com/api-create.php?url=${encodeURIComponent(\n      fullUrl\n    )}`;\n    if (alias !== '') {\n      getRequest = getRequest.concat(`&alias=${alias}`);\n    }\n    fetch(getRequest, { headers: { Origin: 'https://syoon123.github.io' } })\n      .then((response: Response) => {\n        return response.text();\n      })\n      .then((response: string) => {\n        if (response === 'Error') {\n          setAliasValid(false);\n          setTinyUrl('');\n        } else {\n          setAliasValid(true);\n          setTinyUrl(response);\n        }\n      })\n      .then(() => {\n        window.scrollTo(0, document.body.scrollHeight);\n      });\n  }\n\n  function handleCopyToClipboard() {\n    navigator.clipboard.writeText(tinyUrl);\n  }\n\n  function handleRefresh() {\n    window.location.reload();\n    window.scrollTo(0, 0);\n  }\n\n  return (\n    <div className=\"App\">\n      <Container className=\"p-3\">\n        <Row className=\"justify-content-md-center\">\n          <Col lg={8}>\n            <h1 className=\"text-center mb-3\">e-Template</h1>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center mb-0\">\n          <Col lg={8}>\n            <p className=\"text-center mb-0\">\n              Thanks to resources like{' '}\n              <a\n                href=\"https://defund12.org\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                defund12.org\n              </a>{' '}\n              and{' '}\n              <a\n                href=\"https://sayitagain.carrd.co/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Emails for Justice\n              </a>\n              , making one's voice heard has never been easier — by clicking a\n              link, one can contact institution leaders and government officials\n              in a matter of seconds. Inspired by these activists' powerful use\n              of technology, we've built a tool to make this kind of email\n              templating as simple and accessible as possible.\n            </p>\n            <p className=\"text-center mb-3\">\n              <small>&mdash; Sarah and Stephanie Yoon</small>\n            </p>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col lg={8}>\n            <p className=\"text-center mb-3\">\n              <a\n                href=\"https://st234pa.github.io/representative-emails\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Need to find your representatives' emails?\n              </a>\n            </p>\n          </Col>\n        </Row>\n        <Row className=\"justify-content-md-center\">\n          <Col lg={8}>\n            <Card>\n              <Card.Body className=\"pb-0\">\n                <h2 className=\"break-word mb-4\">\n                  {subject ? subject : '[No Subject]'}\n                </h2>\n                {TemplateEdit({\n                  isHidden: !isEditing,\n                  recipients: recipients,\n                  cc: cc,\n                  bcc: bcc,\n                  body: body,\n                  subject: subject,\n                  handleRecipients: setRecipients,\n                  handleCc: setCc,\n                  handleBcc: setBcc,\n                  handleSubject: setSubject,\n                  handleBody: setBody,\n                  handleGenerateUrl: handleGenerateUrl,\n                })}\n                {TemplatePreview({\n                  isHidden: isEditing,\n                  recipients: recipients,\n                  cc: cc,\n                  bcc: bcc,\n                  body: body,\n                  alias: alias,\n                  aliasValid: aliasValid,\n                  filterBuster: filterBuster,\n                  toggleFilterBuster: handleToggleFilterBuster,\n                  handleBackToEdit: handleBackToEdit,\n                  handleGenerateTinyUrl: handleGenerateTinyUrl,\n                  handleAlias: handleAlias,\n                })}\n                {GeneratedUrl({\n                  tinyUrl: tinyUrl,\n                  isHidden: isEditing || !tinyUrl,\n                  handleRefresh: handleRefresh,\n                  handleCopyToClipboard: handleCopyToClipboard,\n                })}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n","import React from 'react';\nimport {\n  RecipientsCallback,\n  ContentCallback,\n  CustomButtonCallback,\n} from '../App';\nimport Recipients from './Recipients';\nimport CustomButton from './CustomButton';\nimport Content from './Content';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\ntype TemplateEditProps = {\n  subject: string;\n  recipients: string[];\n  cc: string[];\n  bcc: string[];\n  body: string;\n  isHidden: boolean;\n  handleRecipients: RecipientsCallback;\n  handleCc: RecipientsCallback;\n  handleBcc: RecipientsCallback;\n  handleSubject: ContentCallback;\n  handleBody: ContentCallback;\n  handleGenerateUrl: CustomButtonCallback;\n};\n\nexport default function TemplateEdit(props: TemplateEditProps) {\n  return (\n    <>\n      {Recipients({\n        label: 'To:',\n        action: props.handleRecipients,\n        items: props.recipients,\n        existingItems: props.cc.concat(props.bcc),\n        isHidden: props.isHidden,\n      })}\n      {Recipients({\n        label: 'Cc:',\n        action: props.handleCc,\n        items: props.cc,\n        existingItems: props.recipients.concat(props.bcc),\n        isHidden: props.isHidden,\n      })}\n      {Recipients({\n        label: 'Bcc:',\n        action: props.handleBcc,\n        items: props.bcc,\n        existingItems: props.recipients.concat(props.cc),\n        isHidden: props.isHidden,\n      })}\n      {Content({\n        label: 'Subject:',\n        action: props.handleSubject,\n        placeholder: 'Type or paste subject line',\n        value: props.subject,\n        isLongText: false,\n        isHidden: props.isHidden,\n        helperText: 'For security reasons, content needs to be plain text.',\n      })}\n      {Content({\n        label: 'Body:',\n        action: props.handleBody,\n        placeholder: 'Type or paste email body',\n        isLongText: true,\n        value: props.body,\n        isHidden: props.isHidden,\n        helperText: 'For security reasons, content needs to be plain text.',\n      })}\n      <Row className=\"justify-content-md-center pt-3\">\n        <Col md={4}>\n          {CustomButton({\n            label: 'Next',\n            action: props.handleGenerateUrl,\n            variant: 'primary',\n            isHidden: props.isHidden,\n          })}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport RecipientsPreview from './RecipientsPreview';\nimport CustomButton from './CustomButton';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Content from './Content';\nimport FilterBusterToggle from './FilterBusterToggle';\nimport { CustomButtonCallback, ContentCallback } from '../App';\n\ntype TemplatePreviewProps = {\n  isHidden: boolean;\n  recipients: string[];\n  cc: string[];\n  bcc: string[];\n  body: string;\n  filterBuster: boolean;\n  toggleFilterBuster: CustomButtonCallback;\n  alias: string;\n  aliasValid: boolean;\n  handleBackToEdit: CustomButtonCallback;\n  handleGenerateTinyUrl: CustomButtonCallback;\n  handleAlias: ContentCallback;\n};\n\nexport default function TemplatePreview(props: TemplatePreviewProps) {\n  if (props.isHidden) {\n    return;\n  }\n  return (\n    <>\n      {RecipientsPreview({\n        label: 'To',\n        recipients: props.recipients,\n        noRecipients: '[none]',\n      })}\n      {RecipientsPreview({\n        label: 'Cc',\n        recipients: props.cc,\n        noRecipients: '[none]',\n      })}\n      {RecipientsPreview({\n        label: 'Bcc',\n        recipients: props.bcc,\n        noRecipients: '[none]',\n      })}\n      <hr />\n      <p className=\"preview-body\">{props.body ? props.body : '[No body]'}</p>\n      <hr />\n      {Content({\n        label: 'Custom TinyURL Alias (Optional)',\n        placeholder: 'ex. my-special-alias',\n        action: props.handleAlias,\n        isLongText: false,\n        value: props.alias,\n        helperText:\n          'tinyurl.com/' + (props.alias ? props.alias : 'my-special-alias'),\n        errorMessage: props.aliasValid\n          ? ''\n          : 'Invalid or unavailable alias. Please try again.',\n      })}\n      {FilterBusterToggle({\n        checked: props.filterBuster,\n        onChange: props.toggleFilterBuster,\n      })}\n      <Row className=\"justify-content-md-center\">\n        <Col md={4}>\n          {CustomButton({\n            label: 'Back to Edit',\n            variant: 'secondary',\n            className: 'mb-2',\n            action: props.handleBackToEdit,\n          })}\n        </Col>\n        <Col md={4}>\n          {CustomButton({\n            label: 'Make URL',\n            variant: 'primary',\n            action: props.handleGenerateTinyUrl,\n          })}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","import React from 'react';\nimport CustomButton from './CustomButton';\nimport { CustomButtonCallback } from '../App';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\ntype GeneratedUrlProps = {\n  isHidden: boolean;\n  tinyUrl: string;\n  handleRefresh: CustomButtonCallback;\n  handleCopyToClipboard: CustomButtonCallback;\n};\n\nexport default function GeneratedUrl(props: GeneratedUrlProps) {\n  return (\n    <>\n      {!props.isHidden && (\n        <>\n          <Row>\n            <Col className=\"mt-3 mb-0\">\n              <p className=\"center mb-0\">\n                <a className=\"mb-0 tiny-url\" href={props.tinyUrl}>\n                  {props.tinyUrl}\n                </a>\n              </p>\n            </Col>\n          </Row>\n        </>\n      )}\n\n      <Row className=\"justify-content-md-center mt-0 mb-3\">\n        <Col md={4}>\n          {CustomButton({\n            label: 'Copy to Clipboard',\n            variant: 'link',\n            className: '',\n            size: 'sm',\n            isHidden: props.isHidden,\n            action: props.handleCopyToClipboard,\n          })}\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center mt-4\">\n        <Col md={4}>\n          {CustomButton({\n            label: 'New Template',\n            variant: 'danger',\n            className: '',\n            isHidden: props.isHidden,\n            action: props.handleRefresh,\n          })}\n        </Col>\n      </Row>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}